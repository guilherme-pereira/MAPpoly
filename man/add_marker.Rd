% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{add_marker}
\alias{add_marker}
\title{Add a single marker to a map}
\usage{
add_marker(input.map, mrk, pos, rf.matrix, genoprob = NULL,
  phase.config = "best", tol = 0.001)
}
\arguments{
\item{input.map}{an object of class \code{mappoly.map}}

\item{mrk}{the name of the marker to be inserted}

\item{pos}{the name of the marker after which the new marker should be added.
One also can inform the numeric position (between markers) were the 
new marker should be added. To insert a marker at the beginning of a 
map, one should use \code{pos = 0}}

\item{rf.matrix}{an object of class \code{mappoly.rf.matrix} containing all recombination
fractions between markers on \code{input.map}}

\item{genoprob}{an object of class \code{mappoly.genoprob} containing the genotype probabilities
for all marker positions on \code{input.map}}

\item{phase.config}{which phase configuration should be used. "best" (default) 
will choose the maximum likelihood configuration}

\item{tol}{the desired accuracy (default = 10e-04)}
}
\value{
An object of class \code{mappoly.map} with the following structure:
\item{m}{the ploidy level}
\item{mrk.names}{the names of markers present in the sequence}
\item{data.name}{name of the dataset of class \code{mappoly.data}}
\item{ph.thres}{the LOD threshold used to define the linkage phase configurations to test}
\item{maps}{a list containing the sequence of markers, their recombination fractions,
the linkage phase configuration for all markers in both parents P and Q and the 
map's joint likelihood}
}
\description{
Creates a new map by adding a marker in a given position in a pre-built map.
}
\details{
\code{add_marker} splits the input map in two submaps to the left and to the right 
of the given position, and using the genotype probabilities, computes the log-likelihood
of all possible linkage phases under a two-point threshold.
}
\examples{
\dontrun{
sub.map<-get_submap(maps.hexafake[[1]], 1:50, reestimate.rf = FALSE)
s<-make_seq_mappoly(hexafake, sub.map$info$mrk.names)
counts<-cache_counts_twopt(input.seq = s, get.from.web = TRUE)
tpt <- est_pairwise_rf(input.seq = s, count.cache = counts)
rf.matrix <- rf_list_to_matrix(input.twopt = tpt,
                               thresh.LOD.ph = 3, 
                               thresh.LOD.rf = 3,
                               shared.alleles = TRUE)
image(rf.matrix$ShP)
###### Removing marker "M_1" (first) #######
mrk.to.remove <- "M_1"
input.map <- drop_marker(sub.map, mrk.to.remove)
plot(input.map, mrk.names = TRUE)
# Computing conditional probabilities using the resulting map
genoprob <- calc_genoprob(input.map)
res.add.M_1<-add_marker(input.map = input.map,
                        mrk = "M_1",
                        pos = 0,
                        rf.matrix = rf.matrix,
                        genoprob = genoprob,
                        tol = 10e-4)  
 plot(res.add.M_1, mrk.names = TRUE)                       
 best.phase <- res.add.M_1$maps[[1]]$seq.ph
 names.id<-names(best.phase$P)
 plot_compare_haplotypes(m = 6,
                         hom.allele.p1 = best.phase$P[names.id],
                         hom.allele.q1 = best.phase$Q[names.id],
                         hom.allele.p2 = sub.map$maps[[1]]$seq.ph$P[names.id],
                         hom.allele.q2 = sub.map$maps[[1]]$seq.ph$Q[names.id])
                         
###### Removing marker "M_20" (first) #######
mrk.to.remove <- "M_20"
input.map <- drop_marker(sub.map, mrk.to.remove)
plot(input.map, mrk.names = TRUE)
# Computing conditional probabilities using the resulting map
genoprob <- calc_genoprob(input.map)
res.add.M_20<-add_marker(input.map = input.map,
                        mrk = "M_20",
                        pos = "M_19",
                        rf.matrix = rf.matrix,
                        genoprob = genoprob,
                        tol = 10e-4)  
 plot(res.add.M_20, mrk.names = TRUE)                       
 best.phase <- res.add.M_20$maps[[1]]$seq.ph
 names.id<-names(best.phase$P)
 plot_compare_haplotypes(m = 6,
                         hom.allele.p1 = best.phase$P[names.id],
                         hom.allele.q1 = best.phase$Q[names.id],
                         hom.allele.p2 = sub.map$maps[[1]]$seq.ph$P[names.id],
                         hom.allele.q2 = sub.map$maps[[1]]$seq.ph$Q[names.id])                
}

}
\author{
Marcelo Mollinari, \email{mmollin@ncsu.edu}
}
