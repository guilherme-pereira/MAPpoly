% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_snp_filter.R
\name{rf_snp_filter}
\alias{rf_snp_filter}
\title{Remove markers that do not meet a LOD criteria}
\usage{
rf_snp_filter(input.twopt, thresh.LOD.ph = 5, thresh.LOD.rf = 5,
  thresh.rf = 0.15, thresh.perc = 0.05, remove.fp = NULL,
  n.clusters = 1)
}
\arguments{
\item{input.twopt}{an object of class \code{poly.est.two.pts.pairwise}}

\item{thresh.LOD.ph}{LOD score threshold for linkage phase
configuration (default = 5)}

\item{thresh.LOD.rf}{LOD score threshold for recombination fraction (default = 5)}

\item{thresh.rf}{threshold for recombination fractions (default = 0.15) 
#'}

\item{thresh.perc}{threshold for the percentage of the pairwise marker
combinations that should be considered in order to
keep the marker. A \code{thresh.perc = 0.05} means that, at least
5\% of the pairwise combinations should be present in order to
keep the marker (default = 0.05)}

\item{remove.fp}{numeric value from 0.0 to 0.5 (default = NULL). When defined,
this parameter identifies and removes markers that presented more than 90\%
of its pairwise recombination fractions below \code{remove.fp} value throughout
the linkage group}

\item{n.clusters}{number of parallel processes (i.e. cores) to spawn (default = 1)}
}
\value{
A filtered object of class \code{mappoly.sequence}. 
See \code{\link[mappoly]{make_seq_mappoly}} for details
}
\description{
Remove markers that do not meet a LOD and recombination fraction
 criteria for at least a percentage of the pairwise marker
 combinations. It also removes markers with strong evidence of
linkage across the whole linkage group (false positive).
}
\details{
\code{thresh.LOD.ph} should be set in order to only select
    recombination fractions that have LOD scores associated to the
    linkage phase configuration higher than \code{thresh_LOD_ph}
    when compared to the second most likely linkage phase configuration.
    Please notice that eliminated markers are usually unlinked to the
    set of markers analyzed.
}
\examples{
 \dontrun{
    data(hexafake)
    all.mrk<-make_seq_mappoly(hexafake, 'all')
    red.mrk<-elim_redundant(all.mrk)
    unique.mrks<-make_seq_mappoly(red.mrk)
    counts.web<-cache_counts_twopt(unique.mrks, get.from.web = TRUE)
    all.pairs<-est_pairwise_rf(input.seq = unique.mrks,
                               count.cache = counts.web,
                               n.clusters = 16,
                               verbose=TRUE)

    ## Full recombination fraction matrix
    mat.full<-rf_list_to_matrix(input.twopt=all.pairs)
    plot(mat.full)

    lgs <- group_mappoly(input.mat = mat.full,
                         input.seq = unique.mrks,
                         expected.groups = 3,
                         inter = TRUE,
                         comp.mat = TRUE, #this data has physical information
                         verbose=TRUE)
    lgs
    plot(lgs)
    lg1 <- make_seq_mappoly(lgs, 1)
    lg2 <- make_seq_mappoly(lgs, 2)
    lg3 <- make_seq_mappoly(lgs, 3)

    ##Plot matrices
    p1<-make_pairs_mappoly(input.seq = lg1, input.twopt = all.pairs)
    p2<-make_pairs_mappoly(input.seq = lg2, input.twopt = all.pairs)
    p3<-make_pairs_mappoly(input.seq = lg3, input.twopt = all.pairs)

    m1<-rf_list_to_matrix(input.twopt = p1)
    m2<-rf_list_to_matrix(input.twopt = p2)
    m3<-rf_list_to_matrix(input.twopt = p3)

    op<-par(mfrow = c(1,3), pty = "s")
    plot(m1, main.text = "LG1")
    plot(m2, main.text = "LG2")
    plot(m3, main.text = "LG3")
    par(op)

    ## Removing disruptive SNPs

    lg1.filt<-rf_snp_filter(p1, 5, 5, 0.15, thresh.perc = 0.05)
    lg2.filt<-rf_snp_filter(p2, 5, 5, 0.15, thresh.perc = 0.05)
    lg3.filt<-rf_snp_filter(p3, 5, 5, 0.15, thresh.perc = 0.05)

    p1.filt<-make_pairs_mappoly(input.seq = lg1.filt, input.twopt = all.pairs)
    p2.filt<-make_pairs_mappoly(input.seq = lg2.filt, input.twopt = all.pairs)
    p3.filt<-make_pairs_mappoly(input.seq = lg3.filt, input.twopt = all.pairs)

    m1.filt<-rf_list_to_matrix(input.twopt = p1.filt)
    m2.filt<-rf_list_to_matrix(input.twopt = p2.filt)
    m3.filt<-rf_list_to_matrix(input.twopt = p3.filt)

    op<-par(mfrow = c(2,3), pty = "s")
    plot(m1, main.text = "LG1")
    plot(m2, main.text = "LG2")
    plot(m3, main.text = "LG3")
    plot(m1.filt, main.text = "LG1.filt")
    plot(m2.filt, main.text = "LG2.filt")
    plot(m3.filt, main.text = "LG3.filt")
    par(op)
   }
   
}
\references{
Mollinari, M., and Garcia, A.  A. F. (2019) Linkage
    analysis and haplotype phasing in experimental autopolyploid
    populations with high ploidy level using hidden Markov
    models, _G3: Genes, Genomes, Genetics_. 
    \url{https://doi.org/10.1534/g3.119.400378}
}
\author{
Marcelo Mollinari, \email{mmollin@ncsu.edu} with updates by Gabriel Gesteira, \email{gabrielgesteira@usp.br}
}
