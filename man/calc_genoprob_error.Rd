% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_genoprob_error.R
\name{calc_genoprob_error}
\alias{calc_genoprob_error}
\title{Compute genotype conditional probabilities using global error}
\usage{
calc_genoprob_error(input.map, phase.config = "best", error = 0.01,
  th.prob = 0.95, restricted = TRUE, verbose = TRUE)
}
\arguments{
\item{input.map}{An object of class \code{mappoly.map}}

\item{phase.config}{which phase configuration should be used. "best" (default) 
will choose the maximum likelihood configuration}

\item{error}{the assumed global error rate (default = 0.01)}

\item{th.prob}{the threshold for using global error or genotype 
probability distribution contained in the data set (default = 0.95)}

\item{restricted}{if \code{TRUE} (default), restricts the prior to the 
possible classes under mendelian non double-reduced segregation 
given the parental dosages}

\item{verbose}{if \code{TRUE} (default), current progress is shown; if
\code{FALSE}, no output is produced}

\item{...}{currently ignored}
}
\value{
An object of class 'mappoly.genoprob' which has two elements: a tridimensional
array containing the probabilities of all possible genotypes for each individual
in each marker position; and the marker sequence with it's recombination frequencies
}
\description{
Conditional genotype probabilities are calculated for each marker
position and each individual given a map. In this version,
the probabilities are not calculated between markers.
}
\examples{
 \dontrun{
    data(tetra.solcap)
    s1<-make_seq_mappoly(tetra.solcap, 'seq1')
    red.mrk<-elim_redundant(s1)
    s1.unique.mrks<-make_seq_mappoly(red.mrk)
    counts.web<-cache_counts_twopt(s1.unique.mrks, get.from.web = TRUE)
    s1.pairs<-est_pairwise_rf(input.seq = s1.unique.mrks,
                                  count.cache = counts.web,
                                  n.clusters = 10,
                                  verbose=TRUE)
    unique.gen.ord<-get_genomic_order(s1.unique.mrks)
    
    ## Selecting a subset of 100 markers at the beginning of chromosome 1 
    s1.gen.subset<-make_seq_mappoly(tetra.solcap, rownames(unique.gen.ord)[1:100])
    
    system.time(s1.gen.subset.map <- est_rf_hmm_sequential(input.seq = s1.gen.subset,
                                        start.set = 10,
                                        thres.twopt = 10, 
                                        thres.hmm = 10,
                                        extend.tail = 50,
                                        info.tail = TRUE, 
                                        twopt = s1.pairs,
                                        sub.map.size.diff.limit = 10, 
                                        phase.number.limit = 40,
                                        reestimate.single.ph.configuration = TRUE,
                                        tol = 10e-3,
                                        tol.final = 10e-4))
     plot(s1.gen.subset.map)
     s1.gen.subset.map.error<-est_full_hmm_with_global_error(input.map = s1.gen.subset.map, 
                                                                 error = 0.05, 
                                                                 verbose = TRUE)
     plot(s1.gen.subset.map.error)
     s1.gen.subset.map.error.no.rest<-est_full_hmm_with_global_error(input.map = s1.gen.subset.map, 
                                                                 error = 0.05, 
                                                                 restricted = FALSE,
                                                                 verbose = TRUE)
     plot_(s1.gen.subset.map.error)
     
     ## Comparin three maps
     plot_map_list(list(s1.gen.subset.map, 
                        s1.gen.subset.map.error.no.rest, 
                        s1.gen.subset.map.error))     
     
     probs<-calc_genoprob(input.map = s1.gen.subset.map.error,
                                verbose = TRUE)
     probs.error<-calc_genoprob_error(input.map = s1.gen.subset.map.error,
                                error = 0.05,
                                verbose = TRUE)
     probs.error.no.rest<-calc_genoprob_error(input.map = s1.gen.subset.map.error.no.rest,
                                error = 0.05, 
                                restricted = FALSE,
                                verbose = TRUE)
   op<-par(mfrow = c(3,1))
   ## Example: individual 11
   ind<-11   
   ## posterior probabilities with no error modeling
   pr1<-probs$probs[,,ind]
   d1<-probs$map
   image(t(pr1),
         col=RColorBrewer::brewer.pal(n=9 , name = "YlOrRd"),
         axes=FALSE,
         xlab = "Markers",
         ylab = " ",
         main = paste("LG_1, ind ", ind))
   axis(side = 1, at = d1/max(d1),
        labels =rep("", length(d1)), las=2)
   axis(side = 2, at = seq(0,1,length.out = nrow(pr1)),
        labels = rownames(pr1), las=2, cex.axis=.5)
   
   ## posterior probabilities with error modeling (restricted)
   pr2<-probs.error$probs[,,ind]
   d2<-probs.error$map
   image(t(pr2),
         col=RColorBrewer::brewer.pal(n=9 , name = "YlOrRd"),
         axes=FALSE,
         xlab = "Markers",
         ylab = " ",
         main = paste("LG_1, ind ", ind, " - w/ error - w/ prior restriction"))
   axis(side = 1, at = d2/max(d2),
        labels =rep("", length(d2)), las=2)
   axis(side = 2, at = seq(0,1,length.out = nrow(pr2)),
        labels = rownames(pr2), las=2, cex.axis=.5)
        
   ## posterior probabilities with error modeling
   pr3<-probs.error.no.rest$probs[,,ind]
   d3<-probs.error.no.rest$map
   image(t(pr3),
         col=RColorBrewer::brewer.pal(n=9 , name = "YlOrRd"),
         axes=FALSE,
         xlab = "Markers",
         ylab = " ",
         main = paste("LG_1, ind ", ind, " - w/ error - no prior restriction"))
   axis(side = 1, at = d3/max(d3),
        labels =rep("", length(d3)), las=2)
   axis(side = 2, at = seq(0,1,length.out = nrow(pr3)),
        labels = rownames(pr3), las=2, cex.axis=.5)       
   par(op)
 }

}
\references{
Mollinari, M., and Garcia, A.  A. F. (2019) Linkage
    analysis and haplotype phasing in experimental autopolyploid
    populations with high ploidy level using hidden Markov
    models, _G3: Genes, Genomes, Genetics_. 
    \url{https://doi.org/10.1534/g3.119.400378}
}
\author{
Marcelo Mollinari, \email{mmollin@ncsu.edu}
}
